{
    "type": "record",
    "name": "logevent_configurationApplied",
    "namespace": "lsst.sal.Test",
    "fields": [
        {
            "name": "salIndex",
            "type": "int",
            "default": 0,
            "description": "SAL index (only present for indexed SAL components)",
            "units": "unitless"
        },
        {
            "name": "private_sndStamp",
            "type": "double",
            "default": 0.0,
            "description": "Time of instance publication",
            "units": "second"
        },
        {
            "name": "private_rcvStamp",
            "type": "double",
            "default": 0.0,
            "description": "Time of instance reception",
            "units": "second"
        },
        {
            "name": "private_efdStamp",
            "type": "double",
            "default": 0.0,
            "description": "UTC time for EFD timestamp. An integer (the number of leap seconds) different from private_sndStamp.",
            "units": "second"
        },
        {
            "name": "private_kafkaStamp",
            "type": "double",
            "default": 0.0,
            "description": "TAI time at which the Kafka message was created.",
            "units": "second"
        },
        {
            "name": "private_seqNum",
            "type": "int",
            "default": 0,
            "description": "Sequence number",
            "units": "unitless"
        },
        {
            "name": "private_revCode",
            "type": "string",
            "default": "",
            "description": "Revision hashcode",
            "units": "unitless"
        },
        {
            "name": "private_identity",
            "type": "string",
            "default": "",
            "description": "Identity of publisher: SAL component name for a CSC or user@host for a user",
            "units": "unitless"
        },
        {
            "name": "private_origin",
            "type": "int",
            "default": 0,
            "description": "Process ID of publisher",
            "units": "unitless"
        },
        {
            "name": "configurations",
            "type": "string",
            "default": "",
            "description": "A comma-separated list of configurations applied. If configuration comes from a clone of a git repo, or similar directory, then it will be a list of file names, without the file extension. Ignore whitespace after commas.",
            "units": "unitless"
        },
        {
            "name": "version",
            "type": "string",
            "default": "",
            "description": "Version of the configuration source. For a clone of a git repo it will be a git hash.",
            "units": "unitless"
        },
        {
            "name": "url",
            "type": "string",
            "default": "",
            "description": "URL of the configuration source. For a clone of a git repo this will be a file URL. For a database it will be a standard database URL. This should always match the same-named field in configurationsAvailable.",
            "units": "unitless"
        },
        {
            "name": "schemaVersion",
            "type": "string",
            "default": "",
            "description": "Version of config schema used by this CSC. For a configuration git repo, this is the name of a folder in the config package, and is typically something like \"v1\". This should always match the same-named field in configurationsAvailable.",
            "units": "unitless"
        },
        {
            "name": "otherInfo",
            "type": "string",
            "default": "",
            "description": "A comma-separated list of event topics (without the logevent prefix) used to publish the entire set of configuration parameters loaded by this CSC, and any other pertinent information. Ignore whitespace after commas.",
            "units": "unitless"
        }
    ],
    "description": "Information about this CSC's current configuration overrides."
}